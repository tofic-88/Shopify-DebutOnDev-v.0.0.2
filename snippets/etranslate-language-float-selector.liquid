<style>
  .etranslate-LanguageList {
    position: absolute;
  	z-index: 2147483647;
  	cursor: pointer;
    font-size:13px;
    direction: ltr;
  }
  .etranslate-language-float-link {
    border: 1px solid rgb(224, 226, 228);
    background-color: white;
  }

  .rectangle_flag:before {
    content: "\00a0";
  }

.select-dropdown-flag-icon-link {
        font-size: 20px;
        box-sizing: content-box;
        background-size: contain;
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: contain;
        background-position: 50%;
        background-repeat: no-repeat;
        position: relative;
        display: inline-block;
        width: 1.33333333em;
        line-height: 1em;
    }

.select-dropdown-flag-icon-link:before {
        content: "\00a0";
    }
#localiser-translate-etranslate>ul{
  margin: 0px;
  -webkit-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -moz-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -ms-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -o-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  transition: all 0.2s;
}

  .etranslate-flag-wrapper {
    display: flex;
  	align-items: center;
  	width: 28px;
  	height: 28px;
  	font-size: 20px;
  	margin-right: 3px;
  }

  .etranslate-language-list-button {
    border: 1px solid rgba(224, 224, 224, 1);
    padding: 8px 10px 8px 10px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    -webkit-transition: max-height 0.2s, visibility 0.2s, opacity 0.2s;
    -moz-transition: max-height 0.2s, visibility 0.2s, opacity 0.2s;
    -ms-transition: max-height 0.2s, visibility 0.2s, opacity 0.2s;
    -o-transition: max-height 0.2s, visibility 0.2s, opacity 0.2s;
    transition: all 0.2s;
  }

  .etranslate-language-list-button-centent {

    display: flex;
    align-items: center;
    }

  .etranslate-language-arrow {
      width: 0.5em;
      height: 0.5em;
      border-right: 1.5px solid currentColor;
      border-top: 1.5px solid currentColor;
      transform: rotate(45deg);
      transition: all 0.2s;
      position: relative;
      top: -1px;
    }

  .etranslate-language-arrow-up {
      transform: rotate(-45deg) !important;
    }

  .etranslate-language-arrow-down {
      transform: rotate(135deg) !important;
    }

  .etranslate-language-list-button:hover{
  	opacity: 0.8
  }

  .etranslate-language-list-dropdown {
  padding: 0px;
  overflow: auto;
  background: white;
  width: 208px;
  user-select: none;
  position: absolute;
  z-index: 516;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  margin: 0px;
  -webkit-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -moz-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -ms-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -o-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
  overflow: -moz-scrollbars-none;
  display: block;
  border: 1px solid rgba(224, 224, 224, 1);
  }
  .etranslate-language-list-dropdown::-webkit-scrollbar {
  display: none;
}

  .etranslate-language-list-dropdown > li{
    margin:0px !important;
    padding: 8px 10px 8px 10px;
    cursor: pointer;
  }

  .etranslate-lo-select-dropdown-item {
  display: flex;
  align-items: center;
  -webkit-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -moz-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -ms-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  -o-transition: max-height 0.3s, visibility 0.2s, opacity 0.2s;
  transition: all 0.2s;
  }

  .etranslate-language-name {
    padding-top: 1px;
  }

  .etranslate-lo-select-dropdown-item:hover {
  /* color: rgba(27, 160, 227, 1); */
  opacity: 0.8
}

  .lo-select-up {
  position: absolute;
  bottom: 100%;
}

.lo-select-selection-item-top {
  border-bottom: 0px;
}

.lo-select-selection-item-bottom {
  border-top: 0px;
}

  .rectangle_flag:before {
    content: "\00a0";
	}

  .flag-icon {
    background-size: contain;
    background-position: 50%;
    background-repeat: no-repeat;
    position: relative;
    display: inline-block;
    width: 1.33333333em;
    line-height: 1em;
    border-radius: 4px;
  }

  .circle_flag {
  	border-radius: 50%;
  	box-sizing: content-box !important;
    width: 1em;
  }
</style>
<div id='localiser-translate-etranslate' class='etranslate-LanguageList' style='display:none'>
     <span class='language-button'>
      <div class='etranslate-language-list-button' id='etranslate-language-button' >
        <div class='etranslate-language-list-button-centent'>
          <div class='etranslate-flag-wrapper'>
            <span class="rectangle_flag select-dropdown-flag-icon flag-icon" />
          </div>

          <div class="etranslate-language-name" data-name="{{ request.locale.endonym_name | split: '-' | first | strip }}">
			{{ request.locale.name | split: '-' | first | strip }}
          </div>

        </div>
        <div class='etranslate-language-arrow'></div>
      </div>
    </span>
    <ul id='etranslate-language-list-dropdown' class='etranslate-language-list-dropdown' style='max-height:0px;opacity:0;'>
		{%- for locale in shop.published_locales -%}
            <li class='etranslate-lo-select-dropdown-item' data-code="{{ locale.iso_code }}" data-name="{{ locale.endonym_name }}">
                  <div class="etranslate-flag-wrapper">
                    <span class="rectangle_flag select-dropdown-flag-icon flag-icon"/>
                  </div>

                  <div class="etranslate-language-name">
					{{locale.name}}
                  </div>
            </li>
    	{%- endfor %}
    </ul>
  </div>
<script>
  var isOpen=false
  var is_up=false

  var item_height = 46

  var flag_min_width = {
    	rectangle_flag: 60,
    	square_flag: 60,
    	circle_flag: 55,
    	without_flag: 0,
    	no_flag: 0
	}

  var language_min_width = {
    language_code: 25,
    language_name: 60,
    native_language_name: 60,
    no_labels: 0
	}

  var langCodeToLangArray = {
    "af": "Afrikaans",
    "ak": "Akan",
    "sq": "Albanian",
    "am": "Amharic",
    "ar": "Arabic",
    "hy": "Armenian",
    "as": "Assamese",
    "az": "Azerbaijani",
    "bm": "Bambara",
    "bn": "Bangla",
    "eu": "Basque",
    "be": "Belarusian",
    "bs": "Bosnian",
    "br": "Breton",
    "bg": "Bulgarian",
    "my": "Burmese",
    "ca": "Catalan",
    "ce": "Chechen",
    "zh-CN": "Chinese",
    "zh-cn": "Chinese",
    "zh-TW": "Chinese (TW)",
    "zh-tw": "Chinese (TW)",
    "cu": "Church Slavic",
    "kw": "Cornish",
    "hr": "Croatian",
    "cs": "Czech",
    "da": "Danish",
    "nl": "Dutch",
    "dz": "Dzongkha",
    "en": "English",
    "us": "English",
    "eo": "Esperanto",
    "et": "Estonian",
    "ee": "Ewe",
    "fo": "Faroese",
    "fi": "Finnish",
    "fr": "French",
    "ff": "Fulah",
    "gl": "Galician",
    "lg": "Ganda",
    "ka": "Georgian",
    "de": "German",
    "el": "Greek",
    "gu": "Gujarati",
    "ha": "Hausa",
    "he": "Hebrew",
    "hi": "Hindi",
    "hu": "Hungarian",
    "is": "Icelandic",
    "ig": "Igbo",
    "id": "Indonesian",
    "ia": "Interlingua",
    "ga": "Irish",
    "it": "Italian",
    "ja": "Japanese",
    "jv": "Javanese",
    "kl": "Kalaallisut",
    "kn": "Kannada",
    "ks": "Kashmiri",
    "kk": "Kazakh",
    "km": "Khmer",
    "ki": "Kikuyu",
    "rw": "Kinyarwanda",
    "ko": "Korean",
    "ku": "Kurdish",
    "ky": "Kyrgyz",
    "lo": "Lao",
    "lv": "Latvian",
    "ln": "Lingala",
    "lt": "Lithuanian",
    "lu": "Luba-Katanga",
    "lb": "Luxembourgish",
    "mk": "Macedonian",
    "mg": "Malagasy",
    "ms": "Malay",
    "ml": "Malayalam",
    "mt": "Maltese",
    "gv": "Manx",
    "mi": "Maori",
    "mr": "Marathi",
    "mn": "Mongolian",
    "ne": "Nepali",
    "nd": "North Ndebele",
    "se": "Northern Sami",
    "nb": "Norwegian (Bokmål)",
    "nn": "Norwegian Nynorsk",
    "or": "Odia",
    "om": "Oromo",
    "os": "Ossetic",
    "ps": "Pashto",
    "fa": "Persian",
    "pl": "Polish",
    "pt-BR": "Portuguese (Brazil)",
    "pt-br": "Portuguese (Brazil)",
    "pt-PT": "Portuguese (Portugal)",
    "pt-pt": "Portuguese (Portugal)",
    "pa": "Punjabi",
    "qu": "Quechua",
    "ro": "Romanian",
    "rm": "Romansh",
    "rn": "Rundi",
    "ru": "Russian",
    "sg": "Sango",
    "gd": "Scottish Gaelic",
    "sr": "Serbian",
    "sn": "Shona",
    "ii": "Sichuan Yi",
    "sd": "Sindhi",
    "si": "Sinhala",
    "sk": "Slovak",
    "sl": "Slovenian",
    "so": "Somali",
    "es": "Spanish",
    "sw": "Swahili",
    "sv": "Swedish",
    "tg": "Tajik",
    "ta": "Tamil",
    "tt": "Tatar",
    "te": "Telugu",
    "th": "Thai",
    "bo": "Tibetan",
    "ti": "Tigrinya",
    "to": "Tongan",
    "tr": "Turkish",
    "tk": "Turkmen",
    "uk": "Ukrainian",
    "ur": "Urdu",
    "ug": "Uyghur",
    "uz": "Uzbek",
    "vi": "Vietnamese",
    "vo": "Volapük",
    "cy": "Welsh",
    "fy": "Western Frisian",
    "wo": "Wolof",
    "xh": "Xhosa",
    "yi": "Yiddish",
    "yo": "Yoruba",
    "zu": "Zulu",
    "sa": "Arabic (Saudi Arabia)",
    "ar-DZ": "Arabic (Algeria)",
    "ar-dz": "Arabic (Algeria)",
    "ar-EG": "Arabic (Egypt)",
    "ar-eg": "Arabic (Egypt)",
    "ar-IQ": "Arabic (Iraq)",
    "ar-iq": "Arabic (Iraq)",
    "ar-JO": "Arabic (Jordan)",
    "ar-jo": "Arabic (Jordan)",
    "ar-KW": "Arabic (Kuwait)",
    "ar-kw": "Arabic (Kuwait)",
    "ar-LB": "Arabic (Lebanon)",
    "ar-lb": "Arabic (Lebanon)",
    "ar-LY": "Arabic (Libya)",
    "ar-ly": "Arabic (Libya)",
    "ar-MA": "Arabic (Morocco)",
    "ar-ma": "Arabic (Morocco)",
    "ar-OM": "Arabic (Oman)",
    "ar-om": "Arabic (Oman)",
    "ar-QA": "Arabic (Qatar)",
    "ar-qa": "Arabic (Qatar)",
    "ar-SY": "Arabic (Syria)",
    "ar-sy": "Arabic (Syria)",
    "ar-TN": "Arabic (Tunisia)",
    "ar-tn": "Arabic (Tunisia)",
    "ar-YE": "Arabic (Yemen)",
    "ar-ye": "Arabic (Yemen)",
    "fr-CA": "French (Canada)",
    "fr-ca": "French (Canada)",
    "en-CA": "English (Canada)",
    "en-ca": "English (Canada)",
    "de-AT": "Austria",
    "de-at": "Austria",
    "de-CH": "Switzerland",
    "de-ch": "Switzerland",
    "de-LU": "Luxembourg",
    "de-lu": "Luxembourg",
    "es-MX": "Spanish (Mexico)",
    "es-mx": "Spanish (Mexico)",
    "es-CO": "Spanish (Columbia)",
    "es-co": "Spanish (Columbia)",
    "es-AR": "Spanish (Argentina)",
    "es-ar": "Spanish (Argentina)",
    "es-CL": "Chile",
    "es-cl": "Chile",
    "es-PE": "Peru",
    "es-pe": "Peru",
    "es-BO": "Bolivia",
    "es-bo": "Bolivia",
    "es-EC": "Ecuador",
    "es-ec": "Ecuador",
    "es-GT": "Guatemala",
    "es-gt": "Guatemala",
};

  var langCodeToCountryArray = {
    "af": "ZA",
    "sq": "AL",
    "am": "ET",
    "ar": "AE",
    "hy": "AM",
    "az": "AZ",
    "eu": "ES",
    "be": "BY",
    "bn": "BD",
    "bs": "BA",
    "bg": "BG",
    "ca": "CA",
    "ceb": "PH",
    "ny": "MW",
    "zh-CN": "CN",
    "zh-cn": "CN",
    "zh-TW": "TW",
    "zh-tw": "TW",
    "zh-HK": "HK",
    "zh-hk": "HK",
    "co": "FR",
    "hr": "HR",
    "cs": "CZ",
    "da": "DK",
    "nl": "NL",
    "en": "GB",
    "et": "EE",
    "tl": "PH",
    "fi": "FI",
    "fr": "FR",
    "fy": "NL",
    "gl": "ES",
    "ka": "GE",
    "de": "DE",
    "el": "GR",
    "gu": "IN",
    "ht": "HT",
    "ha": "NE",
    "haw": "US",
    "us": "US",
    "iw": "IL",
    "hi": "IN",
    "hmn": "CN",
    "hu": "HU",
    "is": "IS",
    "ig": "NG",
    "id": "ID",
    "ga": "IE",
    "it": "IT",
    "ja": "JP",
    "jw": "ID",
    "kn": "IN",
    "kk": "KZ",
    "km": "KH",
    "ko": "KR",
    "ku": "IR",
    "ky": "KG",
    "lo": "LA",
    "la": "IT",
    "lv": "LV",
    "lt": "LT",
    "lb": "LU",
    "mk": "MK",
    "mg": "MG",
    "ms": "MY",
    "ml": "IN",
    "mt": "MT",
    "mi": "NZ",
    "nz": "NZ",
    "mr": "IN",
    "mn": "MN",
    "my": "MM",
    "ne": "NP",
    "no": "NO",
    "ps": "AF",
    "fa": "IR",
    "pl": "PL",
    "pt": "PT",
    "pa": "IN",
    "ro": "RO",
    "ru": "RU",
    "sm": "US",
    "gd": "CA",
    "sr": "RS",
    "st": "LS",
    "sn": "ZW",
    "sd": "PK",
    "si": "LK",
    "sk": "SK",
    "sl": "SI",
    "so": "SO",
    "es": "ES",
    "su": "SD",
    "sw": "TZ",
    "sv": "SE",
    "tg": "TJ",
    "ta": "IN",
    "te": "IN",
    "th": "TH",
    "tr": "TR",
    "uk": "UA",
    "ur": "PK",
    "uz": "UZ",
    "vi": "VN",
    "cy": "GB",
    "xh": "ZA",
    "yi": "DE",
    "yo": "NG",
    "zu": "ZA",
    "ak": "GH",
    "as": "IN",
    "bm": "ML",
    "br": "fr",
    "ce": "ru",
    "cu": "BG",
    "kw": "KW",
    "dz": "BT",
    "eo": "un",
    "ee": "GH",
    "fo": "DK",
    "ff": "MR",
    "lg": "UG",
    "he": "IL",
    "ia": "un",
    "jv": "ID",
    "kl": "GL",
    "ks": "IN",
    "ki": "KE",
    "rw": "RW",
    "ln": "CG",
    "lu": "CD",
    "gv": "GB",
    "nd": "ZW",
    "se": "NO",
    "nb": "NO",
    "nn": "NO",
    "or": "IN",
    "om": "ET",
    "os": "RU",
    "pt-BR": "BR",
    "pt-br": "BR",
    "pt-PT": "PT",
    "pt-pt": "PT",
    "qu": "PE",
    "rm": "CH",
    "rn": "BI",
    "sg": "CF",
    "ii": "CN",
    "tt": "RU",
    "bo": "CN",
    "ti": "ER",
    "to": "TO",
    "tk": "TM",
    "ug": "ZH",
    "vo": "un",
    "wo": "SN",
    "sa": "SA",
    "ar-SA": "sa",
    "ar-sa": "sa",
    "ar-DZ": "DZ",
    "ar-dz": "DZ",
    "ar-AE": "AE",
    "ar-ae": "AE",
    "ar-BH": "BH",
    "ar-bh": "BH",
    "ar-EG": "EG",
    "ar-eg": "EG",
    "ar-IQ": "IQ",
    "ar-iq": "IQ",
    "ar-JO": "JO",
    "ar-jo": "JO",
    "ar-LB": "LB",
    "ar-lb": "LB",
    "ar-LY": "LY",
    "ar-ly": "LY",
    "ar-OM": "OM",
    "ar-om": "OM",
    "ar-QA": "QA",
    "ar-qa": "QA",
    "ar-SD": "SD",
    "ar-sd": "SD",
    "ar-SY": "SY",
    "ar-sy": "SY",
    "ar-YE": "YE",
    "ar-ye": "YE",
    "fr-BE": "BE",
    "fr-be": "BE",
    "fr-LU": "LU",
    "fr-lu": "LU",
    "fr-MC": "MC",
    "fr-mc": "MC",
    "fr-CH": "CH",
    "fr-ch": "CH",
    "fr-CA": "FR-CA",
    "fr-ca": "FR-CA",
    "en-CA": "FR-CA",
    "en-ca": "FR-CA",
    "de-AT": "AT",
    "de-at": "AT",
    "de-CH": "CH",
    "de-ch": "CH",
    "de-LU": "LU",
    "de-lu": "LU",
    "es-MX": "MX",
    "es-mx": "MX",
    "es-CO": "CO",
    "es-co": "CO",
    "es-AR": "AR",
    "es-ar": "AR",
    "es-CL": "CL",
    "es-cl": "CL",
    "es-PE": "PE",
    "es-pe": "PE",
    "es-BO": "BO",
    "es-bo": "BO",
    "es-EC": "EC",
    "es-ec": "EC",
    "es-GT": "GT",
    "es-gt": "GT",
}

  function getLanguageList() {
      return [
        {%- for locale in shop.published_locales %}
        {
          name: '{{locale.name}}',
          endonym_name: '{{locale.endonym_name}}',
          iso_code: '{{locale.iso_code}}',
          primary: {{locale.primary}},
        }{% unless forloop.last %},{% endunless -%}
        {%- endfor %}
      ];
  }

  function setSelectorWhite(f,g,b){var a=b.flags_type;var d=b.labels_type;var e=b.selector_width;var c=g&&g[0]?g.length:0;var h=flag_min_width[a]+language_min_width[d]+6+Number(e)+"px";return h};

  function setSelectorStyle(b,d,f,h){var n=h.position_lr;var l=h.position_tb;var i=l==="fixed_top"||l==="fixed_bottom"?"fixed":"absolute";var e=n==="right"?"right":"left";var m=l==="bottom"||l==="fixed_bottom"?"bottom":"top";var g=h.font_color;var j;if(h.background_color==undefined&&h.background_opacity==undefined){j="rgba(255,255,255,1)"}else{j=transformationRgb(h.background_color,h.background_opacity)}var a=h.horizontal;var c=h.vertical;var k="top: auto;bottom: auto;left: auto;right: auto;"+n+":auto;"+l+":auto;"+e+":"+a+"px;"+m+":"+c+"px;background-color:"+j+";color:"+g+";position:"+i+";";return k};

  function findLanguageFlags(language_flags, currentLocale) {
    var flags_svg
    currentLocale=currentLocale?currentLocale.toLowerCase():currentLocale
    if (language_flags && language_flags[currentLocale]) {
      flags_svg = langCodeToCountryArray[language_flags[currentLocale]] ? langCodeToCountryArray[language_flags[currentLocale]] : langCodeToCountryArray[currentLocale]
    } else {
      flags_svg = langCodeToCountryArray[currentLocale]
    }
    return flags_svg
  }

  function createLanguageFloatSelector(shopDomain, languageList, defaultLocale, currentLocale, etranslateDom, metaFiles){
     var flags_type=metaFiles.flags_type
     var labels_type=metaFiles.labels_type
     var size = flags_type !== 'rectangle_flag' ? '1x1' : '4x3'
     var flags_type_display = flags_type === 'no_flag' || flags_type === 'without_flag' ? true : false
     var no_labels =  labels_type === 'no_labels'? true: false
     var flagUrl = "https://www.parcelpanel.com/assets/other/flags/" + size
     var selector_width=metaFiles.selector_width
     var vertical=metaFiles.vertical
     var position_tb=metaFiles.position_tb
     var bg_rgba

     var buttonDom=etranslateDom.getElementsByClassName('etranslate-language-list-button')[0]
     var dropdownDom=etranslateDom.getElementsByClassName('etranslate-language-list-dropdown')[0]
	 var dropdown_css_code=setSelectorStyle(buttonDom,dropdownDom, languageList, metaFiles)
     var language_flags=metaFiles.language_flags

     var flags_svg=findLanguageFlags(language_flags,currentLocale)

     var border_width=metaFiles.border_width
     var is_up=setPisition(buttonDom,dropdownDom,languageList,vertical,position_tb)

     etranslateDom.setAttribute('style',dropdown_css_code)
     var button_select_dom_flag = buttonDom.getElementsByClassName('select-dropdown-flag-icon')[0]
     button_select_dom_flag.style.backgroundImage='url('+flagUrl+'/'+flags_svg.toLowerCase()+'.svg)'
	 flags_type === 'circle_flag'?button_select_dom_flag.classList.add('circle_flag'):''

     bg_rgba=transformationRgb(metaFiles.background_color,metaFiles.background_opacity)
     dropdownDom.setAttribute('style','width:'+selector_width+';background-color:'+bg_rgba+';max-height:0px;opacity:0;')
     var min_width=setSelectorWhite(etranslateDom,languageList,metaFiles)

     buttonDom.style.width=min_width
     buttonDom.style.borderWidth=border_width+'px'

     dropdownDom.style.width=min_width
     dropdownDom.style.borderWidth=border_width+'px'

     var select_children=dropdownDom.children
     for (var i = 0; i < select_children.length; i++) {
    	var select_dom = select_children[i];
       	var select_dom_flag = select_dom.getElementsByClassName('select-dropdown-flag-icon')[0]
    	var language_code = select_dom.dataset.code;
    	var language_native_name = select_children[i].dataset.name;
       	var flags_svg=findLanguageFlags(language_flags,language_code)

       	select_dom_flag.style.backgroundImage='url('+flagUrl+'/'+flags_svg.toLowerCase()+'.svg)'
        flags_type === 'circle_flag'?select_dom_flag.classList.add('circle_flag'):''
    	select_dom.onclick = languageChange(languageList.find(function (x) { return x.iso_code.toLowerCase() === language_code.toLowerCase(); }),defaultLocale);
        var select_labels=select_dom.getElementsByClassName('etranslate-language-name')[0]
        if (labels_type === 'language_name'){
        	select_labels.innerHTML = langCodeToLangArray[language_code]?langCodeToLangArray[language_code]:select_labels.text()
      	} else if(labels_type === 'native_language_name') {
      	    language_native_name = language_native_name=='français'?'Français':language_native_name
      	    select_labels.innerHTML = language_native_name?language_native_name:langCodeToLangArray[language_code]
      	} else {
        	select_labels.innerHTML = language_code?language_code.toLocaleUpperCase():language_code
      	}
    }
    if(flags_type_display){
      var display_flag=etranslateDom.getElementsByClassName('etranslate-flag-wrapper')
      for(var i=0;i<display_flag.length;i++){
        display_flag[i].style.display='none'
      }
    }
    if(no_labels){
      var display_flag=etranslateDom.getElementsByClassName('etranslate-language-name')
      for(var i=0;i<display_flag.length;i++){
        display_flag[i].style.display='none'
      }
    }else{
      var buttom_labels=buttonDom.getElementsByClassName('etranslate-language-name')[0]
      if(labels_type === 'language_name'){
        buttom_labels.innerHTML = langCodeToLangArray[currentLocale]?langCodeToLangArray[currentLocale]:buttom_labels.text()
      } else if (labels_type === 'native_language_name'){
        var language_native_name = buttom_labels.dataset.name;
        language_native_name = language_native_name=='français'?'Français':language_native_name
		buttom_labels.innerHTML = language_native_name?language_native_name:buttom_labels.text()
      } else {
        buttom_labels.innerHTML = currentLocale?currentLocale.toLocaleUpperCase():currentLocale
      }
    }

    if(flags_type === 'rectangle_flag'){
        var display_flag=etranslateDom.getElementsByClassName('etranslate-flag-wrapper')
        for(var i=0;i<display_flag.length;i++){
            display_flag[i].style.marginRight='8px'
        }
    }

    var isOpen = false;
    buttonDom.addEventListener('click', function (e) {
    	isOpen = !isOpen;
    	if (isOpen) {
    		openDropdown();
    	} else {
    		closeDropdown();
    	}
    });
    function openDropdown() {
    	dropdownDom.style.maxHeight=select_children.length*46+'px'
    	dropdownDom.style.opacity='1'
        var pointer=buttonDom.getElementsByClassName('etranslate-language-arrow')[0]
        if(is_up){
          dropdownDom.style.borderBottom='0px'
          pointer.classList.add('etranslate-language-arrow-up')
        }else{
          dropdownDom.style.borderTop='0px'
          pointer.classList.add('etranslate-language-arrow-down')
        }
    	isOpen = true;
    }

    function closeDropdown() {
    	dropdownDom.style.maxHeight='0px'
    	dropdownDom.style.opacity='0'
        var pointer=buttonDom.getElementsByClassName('etranslate-language-arrow')[0]
        pointer.classList.remove('etranslate-language-arrow-down')
        pointer.classList.remove('etranslate-language-arrow-up')
    	isOpen = false;
    }



    function languageChange(lang) {
              return function () {
              var protocol=window.location.protocol
              var host=window.location.host
              var search_info=window.location.search
              var pathname = window.location.pathname
              var lan_code=lang.iso_code.toLowerCase()
              var url_lan_code = (pathname.match(/\/(\S*?)\//) || pathname.match(/\/(\S*)/))[1]
              localStorage.setItem('lan_code', lan_code);

              //点击当前语言刷新
              if(currentLocale===lan_code){
                location.reload();
              }

              //切换为默认语言
              if(currentLocale.toLowerCase()!==lan_code.toLowerCase() && url_lan_code.toLowerCase()!==lan_code.toLowerCase() && defaultLocale.toLowerCase()===lan_code.toLowerCase()){
                var new_pathname
                if (!url_lan_code) {
                    new_pathname = '/' + lan_code
                } else {
                    new_pathname = pathname.replace('/' + url_lan_code, '')
                }
                window.location.href = `${window.location.protocol}//${window.location.host}${new_pathname}${window.location.search}`
              }

              //切换为非默认
              if(currentLocale.toLowerCase()!==lan_code.toLowerCase() && url_lan_code.toLowerCase()!==lan_code.toLowerCase() && defaultLocale.toLowerCase()!==lan_code.toLowerCase()){
                //插入url_lan_code
            	var new_pathname
                if (lan_code === url_lan_code.toLowerCase()) {
                	new_pathname = pathname
            	} else {
                	if (!url_lan_code) {
                    	new_pathname = '/' + lan_code
                	} else {
                  		var find_lan_code=false;
                  		languageList.map((v,k)=>{
                    		if(v.iso_code.toLowerCase()===url_lan_code.toLowerCase()){
                      		find_lan_code=true
                    	}
                  		})
                		if(find_lan_code){
                   			new_pathname = pathname.replace(url_lan_code, lan_code)
                		} else {
                   	 		new_pathname = '/' + lan_code + pathname
                		}
                	}
                }
                window.location.href = `${window.location.protocol}//${window.location.host}${new_pathname}${window.location.search}`
              }
            }
          }
     return etranslateDom
  }

	function setPisition(j,l,b,c,k){var h=j.getBoundingClientRect();var e=l.getBoundingClientRect();const f=b[0]?b.length*item_height:0;const a=c+h["height"];const i=c-e["height"];const g=c-e["height"];var d=k.substring(k.lastIndexOf("_")+1,k.length);if(g<f&&d!=="top"){l.classList.add("lo-select-up");return true}else{if(g>=f&&d!=="top"){l.classList.remove("lo-select-up");return false}}};

	function getCurrentLocale(c,b){var a=window.location.pathname.split("/").filter(function(d){return d});if(a&&a.length>0&&c.find(function(d){return d.iso_code.toLowerCase()===a[0].toLowerCase()})){return a[0]}else{return b}};

	function setLanguageSelector(){
  		var languageList = getLanguageList();
    	var shopDomain = 'https://{{shop.domain}}';
    	var primaryLanguage = languageList.find(function (x) { return x.primary; });
    	var defaultLocale = primaryLanguage ? primaryLanguage.iso_code : 'en';
    	var currentLocale = getCurrentLocale(languageList, defaultLocale);
    	var metaFiles = {{shop.metafields.etranslate.selector_config | json}}
    	var etranslateDom=document.getElementById('localiser-translate-etranslate')
    	applyPriviewCssCode(metaFiles.css_code)
    	if( Number(metaFiles.status) === 1){
       		if(metaFiles.choose_language_selector === undefined || metaFiles.choose_language_selector === 'floating_selector'){
          		if(metaFiles.style_of_the_selector === undefined || metaFiles.style_of_the_selector === 'dropdown'){
      				createLanguageFloatSelector(shopDomain, languageList, defaultLocale, currentLocale, etranslateDom, metaFiles)
            	}else{
              		etranslateDom.remove()
            	}
        	}else{
          		etranslateDom.remove()
        	}
    	}else{
      		etranslateDom.remove()
    	}
  	}

  function applyPriviewCssCode(css_code) {
    var myReg = /^[.#]?\w+[^{]+\{[^}]*\}/;
    if (css_code && myReg.test(css_code)) {
       addCSS(css_code)
    }
  }

  function addCSS(cssText){
    var style = document.createElement('style'),  //创建一个style元素
    head = document.head || document.getElementsByTagName('head')[0]; //获取head元素
    style.type = 'text/css'; //这里必须显示设置style元素的type属性为text/css，否则在ie中不起作用
    if(style.styleSheet){ //IE
        var func = function(){
            try{ //防止IE中stylesheet数量超过限制而发生错误
                style.styleSheet.cssText = cssText;
            }catch(e){

            }
        }
        //如果当前styleSheet还不能用，则放到异步中则行
        if(style.styleSheet.disabled){
            setTimeout(func,10);
        }else{
            func();
        }
    }else{ //w3c
        //w3c浏览器中只要创建文本节点插入到style元素中就行了
        var textNode = document.createTextNode(cssText);
        style.appendChild(textNode);
    }
    head.appendChild(style); //把创建的style元素插入到head中
  }

  function transformationRgb(color_value, aipha) {
	if(color_value == undefined && aipha == undefined){
       	return 'rgba(255,255,255,1)'
     }
    var a
    if(aipha===undifind){
      a=1
    }else{
      a= aipha / 100 ? aipha / 100 : 1
    }

    if(!color_value){
      return "rgba(255,255,255," + a + ")";
    }
    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;

    if (!color_value) {
        return "rgba(255,255,255,"+a+")"
    }
    var color = color_value.toLowerCase();
    if (reg.test(color)) {
        if (color.length === 4) {
            var colorNew = "#";
            for (let i = 1; i < 4; i += 1) {
                colorNew += color.slice(i, i + 1).concat(color.slice(i, i + 1));
            }
            color = colorNew;
        }
        var colorChange = [];
        for (let i = 1; i < 7; i += 2) {
            colorChange.push(parseInt("0x" + color.slice(i, i + 2)));
        }
        return "rgba(" + colorChange.join(",") + "," + a + ")";
    } else {
        return color;
    }
}



  documentReady(setLanguageSelector);
  function documentReady(fu) {
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      setTimeout(documentReady(setLanguageSelector), 1);
    } else {
      document.addEventListener('DOMContentLoaded', fu);
    }
  }
</script>